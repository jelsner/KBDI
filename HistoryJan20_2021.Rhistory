tm_shape(median_hh_income) +
tm_fill(col = "PercentChange", alpha = .5)
library(sf)
LandHex.sf <- read_sf(dsn = "Data/NorthFloridaPublicLandHexagons10km.shp") %>%
dplyr::filter(NAME == "APALACHICOLA")
library(tmap)
Airport.sf <- data.frame(Name = c("Regional Airport"),
Latitude = c(30.39306),
Longitude = c(-84.35333)) %>%
st_as_sf(coords = c("Longitude", "Latitude"),
crs = 4326) %>%
st_transform(crs = st_crs(LandHex.sf))
tmap_mode("view")
tm_shape(LandHex.sf) +
tm_borders() +
tm_shape(Airport.sf) +
tm_dots(size = .1, col = "darkgreen")
install.packages("ggspatial")
library(ggspatial)
ggplot() +
annotation_spatial(LandHex.sf)
ggplot() +
annotation_spatial(LandHex.sf)
ggplot() +
layer_spatial(LandHex.sf)
ggplot() +
geom_sf(data = LandHex.sf)
library(ggspatial)
ggplot() +
layer_spatial(LandHex.sf) +
annotation_scale(location = "tl") +
annotation_north_arrow(location = "br", which_north = "true")
st_crs(LandHex.sf)
ggplot() +
layer_spatial(LandHex.sf) +
annotation_map_tile(type = "osm")
LandHex.sf <- LandHex.sf %>%
st_transform(crs = 4326)
library(gdal)
library(rgdal)
LandHex.sf <- LandHex.sf %>%
st_transform(crs = 4326)
exportToProj4
LandHex.sf <- LandHex.sf %>%
st_transform(crs = 'EPSG:4326')
install.packages(c("backports", "chillR", "codetools", "colourvalues", "data.table", "Deriv", "fitdistrplus", "future", "here", "htmlwidgets", "jsonlite", "KernSmooth", "loo", "nlme", "packcircles", "parallelly", "prism", "ps", "rstan", "usethis"))
library(ggspatial)
library(sf)
LandHex.sf <- read_sf(dsn = "Data/NorthFloridaPublicLandHexagons10km.shp") %>%
dplyr::filter(NAME == "APALACHICOLA")
LandHex.sf <- LandHex.sf %>%
st_transform(crs = 4326)
ggplot() +
layer_spatial(LandHex.sf) +
annotation_map_tile(type = "osm")
LandHex.sf <- read_sf(dsn = "Data/NorthFloridaPublicLandHexagons10km.shp") %>%
dplyr::filter(NAME == "APALACHICOLA")
ggplot() +
annotation_map_tile(type = "osm") +
layer_spatial(LandHex.sf)
LandHex.sf <- LandHex.sf %>%
st_transform(crs = 4326)
ggplot() +
annotation_map_tile(type = "osm") +
layer_spatial(LandHex.sf)
ggplot() +
layer_spatial(LandHex.sf)
annotation_map_tile(type = "osm")
ggplot() +
layer_spatial(LandHex.sf) +
annotation_map_tile(type = "osm")
ggplot() +
annotation_map_tile(type = "osm") +
layer_spatial(LandHex.sf)
LandHex.sf <- read_sf(dsn = "Data/NorthFloridaPublicLandHexagons10km.shp") %>%
dplyr::filter(NAME == "APALACHICOLA")
library(lubridate)
library(dplyr)
library(tidyr)
TLH.df <- read.csv(file = 'Data/TLH_Daily1940.csv',
stringsAsFactors = FALSE,
header = TRUE) %>%
mutate(Date = as.Date(DATE)) %>%
mutate(Year = year(Date),
month = month(Date, label = TRUE, abbr = TRUE),
doy = yday(Date),
MaxTemp = TMAX,
MinTemp = TMIN,
Rainfall24 = PRCP,
Rainfall24 = replace_na(Rainfall24, 0),
Rainfall24mm = Rainfall24 * 25.4)
TLH.df$MaxTemp[TLH.df$Date == "2005-07-08"] <- 96 # missing max temperature. Filled from weather underground data
sum(is.na(TLH.df$PRCP))
nrow(TLH.df)
sum(is.na(TLH.df$PRCP)) / nrow(TLH.df) * 100  # only 5 missing values [< .02% of all days]
Rainfall24 <- TLH.df$Rainfall24
PR <- dplyr::lag(Rainfall24)
PR[1] <- 0
CumR <- 0
NetR <- numeric()
for(i in 1:length(Rainfall24)) {
R24 <- Rainfall24[i]
if (R24 == 0) {
NetR[i] <- 0
CumR <- 0
}
else if(R24 > 0 & R24 <= .2) {
CumR <- CumR + R24
if (PR[i] > .2 | CumR > .2) NetR[i] <- R24
else if (CumR > .2) NetR[i] <- CumR - .2
else NetR[i] <- 0
}
else if (R24 > .2) {
if (CumR <= .2) {
NetR[i] <- CumR + R24 - .2
CumR <- CumR + R24
}
else {
NetR[i] <- R24
CumR <- CumR + R24
}
}
}
TLH.df$NetR <- NetR
Q <- 269
R <- 59.23 # average annual rainfall for TLH
MaxTemp <- TLH.df$MaxTemp
Ql <- numeric()
DeltaQl <- numeric()
for(i in 1:length(Rainfall24)){
DeltaQ <- (800 - Q) * (.968 * exp(.0486 * MaxTemp[i]) - 8.3) /(1 + 10.88 * exp(-.0441 * R)) * .001
Q <- ifelse(NetR[i] == 0,  Q + DeltaQ,  (Q + DeltaQ) - NetR[i] * 100)
Q <- ifelse(Q < 0, 0, Q)
Ql <- c(Ql, Q)
DeltaQl <- c(DeltaQl, DeltaQ)
}
TLH.df$Ql <- Ql
TLH.df$Qlm <- Ql * .254  # tenth of an inch to mm
TLH.df$DeltaQl <- DeltaQl
TLH.df$DroughtIndex <- floor(Ql/100)
TLH.df <- TLH.df %>%
dplyr::filter(Year >= 1946 & Year <= 2019) # Only full years
range(TLH.df$Ql)
library(ggplot2)
TLH.df %>%
dplyr::group_by(month, Year) %>%
dplyr::summarise(Avg = mean(Qlm)) %>%
ggplot(aes(x = Year, y = Avg, color = Avg)) +
geom_point() +
scale_color_gradient2(low = "#FC8B93", mid = "#965784", high = "#D9DE6E", guide = FALSE) +
ylab("") + xlab("") +
geom_smooth(method = lm) +
facet_wrap(~ month, ncol = 12) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Monthly average soil moisture deficit (mm) by year, Tallahassee, FL",
subtitle = "Amount of water needed to bring soil moisture to full capacity",
caption = "Based on data from the NWSFO, Tallahassee, FL (1946-2019)")
library(USAboundaries)
?us_cites
?us_cities
X <- us_cities(states = "IL")
X <- us_cities(states = "IL")
X <- us_cities(states = c("IL"))
X <- us_cities(2010)
library(USAboundariesData)
X <- us_cities(2010)
library(tidyverse)
library(rjson)
loc <- "https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/wtmoore/davis.json"
json_data <- fromJSON(file = loc)
View(json_data)
library(tidyverse)
df <- read_csv("data/weatherSTEMdata2020-12-26")
library(tidyverse)
df <- read_csv("Data/weatherSTEMdata2020-12-26")
library(tidyverse)
df <- read_csv("Data/weatherSTEMdata2020-12-26.csv")
View(df)
library(tidyverse)
df <- read.csv("Data/weatherSTEMdata2020-12-26.csv")
head(df)
dim(df)
43 * 3
1440/60/24
str(df)
table(df$Anemometer..Chaires.Elementary.)
?contains
df2 <- df %>%
contains("Thermometer")
df2 <- df %>%
select(contains("Thermometer"))
str(df2)
df2 <- df %>%
select(contains("Thermometer")) %>%
select(-c(contains("Chaires"), contains("DeSoto"), contains("Rickards")))
df2
head(df2)
str(df2)
?as.Date
library(tidyverse)
df <- read.csv("Data/weatherSTEMdata2020-12-26.csv")
df <- df %>%
mutate(time = ymd_hms(timestamp))
str(df)
df <- df %>%
mutate(time = ymd_hms(Timestamp))
library(lubridate)
df <- df %>%
mutate(time = ymd_hms(Timestamp))
head(str(df))
head(df$time)
str(df2)
df2 <- df %>%
select(contains("Thermometer")) %>%
select(-c(contains("Chaires"),
contains("DeSoto"),
contains("Rickards"),
contains("Deerlake"),
contains("Hawks")))
str(df2)
?strsplit()
?str_split_fixed
fruits <- c(
"apples and oranges and pears and bananas",
"pineapples and mangos and guavas"
)
str_split(fruits, " and ")
df$Record.ID
names(df2)
df2 <- df %>%
select(contains("Thermometer")) %>%
select(-c(contains("Chaires"),
contains("DeSoto"),
contains("Rickards"),
contains("Deerlake"),
contains("Hawks"),
contains("FSU.Weather"),
contains("Montford"),
contains("Golden.Eagle"),
contains("Ballard"),
contains("Florida.A.M."),
contains("FSWN"),
contains("Holy.Comforter")))
library(lubridate)
times <- ymd_hms(df$Timestamp)
names(df2)
Latitude <- rep(NA, length(loc))
Longitude <- rep(NA, length(loc))
Name <- rep(NA, length(loc))
for(i in 1:length(loc)){
json_data <- fromJSON(file = loc[i])
Name[i] <- json_data$davis_current_observation$station_name
Latitude[i] <- as.numeric(json_data$latitude)
Longitude[i] <- as.numeric(json_data$longitude)
}
loc <- c("https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/canopyoaks/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/leon/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/gilchrist/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/sail/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/chiles/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/woodville/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/fortbraden/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/lincoln/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/sullivan/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/tallahasseenurseries/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/maclay/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/ruediger/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/conley/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/hartsfield/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/oakridge/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/sealey/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/killearnlakes/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/wtmoore/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/bucklake/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/swiftcreek/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/famudrs/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/fsurez/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/fsursp/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/clc/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/fsus/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/success/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/theedison/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/tcc/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/fsuesc/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/apalacheepark/davis.json",
"https://cdn.weatherstem.com/dashboard/data/dynamic/model/leon/netallahassee/davis.json"
)
Latitude <- rep(NA, length(loc))
Longitude <- rep(NA, length(loc))
Name <- rep(NA, length(loc))
for(i in 1:length(loc)){
json_data <- fromJSON(file = loc[i])
Name[i] <- json_data$davis_current_observation$station_name
Latitude[i] <- as.numeric(json_data$latitude)
Longitude[i] <- as.numeric(json_data$longitude)
}
df <- data.frame(Name, Latitude, Longitude)
df
df <- read.csv("Data/weatherSTEMdata2020-12-26.csv")
df3 <- data.frame(Name, Latitude, Longitude)
library(sf)
projcrs <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
sfdf <- st_as_sf(df3,
coords = c("Longitude", "Latitude"),
crs = projcrs)
library(tmap)
tmap_mode("view")
tm_shape(sfdf) +
tm_dots() +
tm_text(text = "Name")
df.sf <- st_as_sf(df3,
coords = c("Longitude", "Latitude"),
crs = projcrs)
library(stars)
df.st <- st_as_stars(df.sf)
df.st
head(df2)
dim(df2)
X <- matrix(df, ncol = 31)
X <- matrix(df2, ncol = 31)
dim(X)
X <- as.matrix(df2)
dim(X)
head(X)
length(times)
d <- st_dimensions(location = df.sf$geometry,
time = times)
df.st <- st_as_stars(list(Temperature = as.matrix(df2, ncol = length(times))), dimensions = d)
df.st
library(ggplot2)
ggplot() +
geom_stars(data = df.st[,,300]) +
scale_fill_viridis_c() +
coord_sf() +
theme_map() +
theme(legend.position = "bottom") +
theme(legend.key.width = unit(2, "cm"))
df.st[,,10]
df.st[,,300]
df.st[,,31]
df.st[,,32]
df.st <- st_as_stars(list(Temperature = as.matrix(df2, nrow = length(times))), dimensions = d)
df.st
df.st[,,300]
df.st[,300,]
dim(df.st)
df.st <- st_as_stars(list(Temperature = as.matrix(df2, ncol = length(times))), dimensions = d)
dim(df.st)
df.st <- st_as_stars(list(Temperature = as.matrix(df2), dimensions = d))
d <- st_dimensions(location = df.sf$geometry,
time = times)
dim(d)
dim(df2)
df.st <- st_as_stars(list(Temperature = as.matrix(t(df2)), dimensions = d))
df.st
df.st <- st_as_stars(list(Temperature = t(df2), dimensions = d))
df.st
class(d)
d
x <- as.vector(df2)
length(x)
dim(df2)
head(df2)
?as.vector
x <- matrix(df2)
dim(x)
x <- matrix(df2, ncol = 1441)
x <- matrix(df2, ncol = 31)
dim(x)
x <- as.vector(t(df2))
dim(x)
x <- as.vector(unlist(df2))
dim(x)
x <- stack(df2)
dim(x)
head(x)
x$values
df.st <- st_as_stars(list(Temperature = matrix(stack(df2)$values, ncol = length(times))), dimensions = d)
df.st
dim(df.st)
ggplot() +
geom_stars(data = df.st$Temperature[, 300]) +
scale_fill_viridis_c() +
coord_sf() +
theme_map() +
theme(legend.position = "bottom") +
theme(legend.key.width = unit(2, "cm"))
class(df.st)
library(sf)
LandHex.sf <- read_sf(dsn = "Data/NorthFloridaPublicLandHexagons10km.shp") %>%
dplyr::filter(NAME == "APALACHICOLA")
st_crs(LandHex.sf)
library(ggspatial)
LandHex.sf <- LandHex.sf %>%
st_transform(crs = 4326)
ggplot() +
annotation_map_tile(type = "osm") +
layer_spatial(LandHex.sf)
x <- rnorm(100)
y <- rnorm(100)
x
y
cor(x, y)
library(lubridate)
library(dplyr)
library(tidyr)
TLH.df <- read.csv(file = 'Data/TLH_Daily1940.csv',
stringsAsFactors = FALSE,
header = TRUE) %>%
mutate(Date = as.Date(DATE)) %>%
mutate(Year = year(Date),
month = month(Date, label = TRUE, abbr = TRUE),
doy = yday(Date),
MaxTemp = TMAX,
MinTemp = TMIN,
Rainfall24 = PRCP,
Rainfall24 = replace_na(Rainfall24, 0),
Rainfall24mm = Rainfall24 * 25.4)
TLH.df$MaxTemp[TLH.df$Date == "2005-07-08"] <- 96
TLH.df <- read_csv(file = 'Data/TLH_Daily1940.csv')
library(tidyverse)
TLH.df <- read_csv(file = 'Data/TLH_Daily1940.csv')
library(lubridate)
library(tidyverse)
TLH.df <- read_csv(file = 'Data/TLH_Daily1940.csv') %>%
#                   stringsAsFactors = FALSE,
#                   header = TRUE) %>%
mutate(Date = as.Date(DATE)) %>%
mutate(Year = year(Date),
month = month(Date, label = TRUE, abbr = TRUE),
doy = yday(Date),
MaxTemp = TMAX,
MinTemp = TMIN,
Rainfall24 = PRCP,
Rainfall24 = replace_na(Rainfall24, 0),
Rainfall24mm = Rainfall24 * 25.4)
TLH.df$MaxTemp[TLH.df$Date == "2005-07-08"] <- 96
class(TLH.df)
glimpse(TLH.df)
TLH.df <- read_csv(file = 'Data/TLH_Daily1940.csv') %>%
#                   stringsAsFactors = FALSE,
#                   header = TRUE) %>%
rename(Date = DATE) %>%
mutate(Year = year(Date),
month = month(Date, label = TRUE, abbr = TRUE),
doy = yday(Date),
MaxTemp = TMAX,
MinTemp = TMIN,
Rainfall24 = PRCP,
Rainfall24 = replace_na(Rainfall24, 0),
Rainfall24mm = Rainfall24 * 25.4)
TLH.df$MaxTemp[TLH.df$Date == "2005-07-08"] <- 96
library(lubridate)
library(tidyverse)
TLH.df <- read_csv(file = 'Data/TLH_Daily1940.csv') %>%
rename(Date = DATE) %>%
mutate(Year = year(Date),
month = month(Date, label = TRUE, abbr = TRUE),
doy = yday(Date),
MaxTemp = TMAX,
MinTemp = TMIN,
Rainfall24 = PRCP,
Rainfall24 = replace_na(Rainfall24, 0),
Rainfall24mm = Rainfall24 * 25.4)
TLH.df$MaxTemp[TLH.df$Date == "2005-07-08"] <- 96
KAAF.df <- read_csv(file = 'Data/KAAF_Daily1940.csv') %>%
rename(Date = DATE) %>%
mutate(Year = year(Date),
month = month(Date, label = TRUE, abbr = TRUE),
doy = yday(Date),
MaxTemp = TMAX,
MinTemp = TMIN,
Rainfall24 = PRCP,
Rainfall24 = replace_na(Rainfall24, 0),
Rainfall24mm = Rainfall24 * 25.4)
OrderMissingT <- c(88,88,88,76,76,73,63,66,80,78,72,72,72,73,73,73,72,78,77,70,64,63,62,72,80,69,74,74,75,91,89,88,86,87,88,87,82,84,87,87,87,85,81,84,84,82,86,86,54,62,54,50,75,82,87,89,91,88,89,89,81,73,61,60,54,56,64,63,75,80,88,87,90,88,84,79,78,54,65,72,51,64,72,68,69,64,61,64,73,68,72,74,75,84,82,91,88,93,90,91,87,88,86,88,84,85,86,77,81,82,82,79,83,75,77,75,71,75,65,55,74,72,63,70,77,71,66,59,68,68,74,72,73,75,77,65,67,76,78,78,76,66,87,78,77,85,81,81,79,83,87,84,84,89,91,88,88,88,90,88,83,86,85,86,84,85,88,91,90,88,84,82,90,83,85,79,84,84,80,79,84,83,87,83,82,8372,69,74,72,62,74,70,70,72,50,57,64,57,65,64,62,70,64,56,79,73,75,74,69,72,72,65,72,81,80,78,78,89,88,89,86,86,84,89,67,78,78,72,74,72,71,74,66,68,71,69,75,72,67,62,65,62,64,68,72,65,70,64,49,50,62,54,61,63,66,66,56,57,54,55,57,68,58,54,56,56,40,55,63,63,46,63,69,52,53,67,70,64,67,66,71,72,76,77,81,81,89,85,88,92,91,83,91,90,86,91,91,84,87,83,85,87,85,82,83,82,84,79,82,78,74,70,75,76,64,59,44,71)
KAAF.df$MaxTemp[is.na(KAAF.df$MaxTemp)] <- OrderMissingT
AllTemps <- KAAF.df$MaxTemp
OrderMissingT <- c(88,88,88,76,76,73,63,66,80,78,72,72,72,73,73,73,72,78,77,70,64,63,62,72,80,69,74,74,75,91,89,88,86,87,88,87,82,84,87,87,87,85,81,84,84,82,86,86,54,62,54,50,75,82,87,89,91,88,89,89,81,73,61,60,54,56,64,63,75,80,88,87,90,88,84,79,78,54,65,72,51,64,72,68,69,64,61,64,73,68,72,74,75,84,82,91,88,93,90,91,87,88,86,88,84,85,86,77,81,82,82,79,83,75,77,75,71,75,65,55,74,72,63,70,77,71,66,59,68,68,74,72,73,75,77,65,67,76,78,78,76,66,87,78,77,85,81,81,79,83,87,84,84,89,91,88,88,88,90,88,83,86,85,86,84,85,88,91,90,88,84,82,90,83,85,79,84,84,80,79,84,83,87,83,82,8372,69,74,72,62,74,70,70,72,50,57,64,57,65,64,62,70,64,56,79,73,75,74,69,72,72,65,72,81,80,78,78,89,88,89,86,86,84,89,67,78,78,72,74,72,71,74,66,68,71,69,75,72,67,62,65,62,64,68,72,65,70,64,49,50,62,54,61,63,66,66,56,57,54,55,57,68,58,54,56,56,40,55,63,63,46,63,69,52,53,67,70,64,67,66,71,72,76,77,81,81,89,85,88,92,91,83,91,90,86,91,91,84,87,83,85,87,85,82,83,82,84,79,82,78,74,70,75,76,64,59,44,71)
AllTemps[is.na(AllTemps)] <- OrderMissingT
KAAF.df$MaxTemp <- AllTemps
sum(is.na(KAAF.df$PRCP))
nrow(KAAF.df)
sum(is.na(KAAF.df$PRCP)) / nrow(KAAF.df) * 100
sum(is.na(TLH.df$PRCP))
nrow(TLH.df)
sum(is.na(TLH.df$PRCP)) / nrow(TLH.df) * 100
sum(is.na(KAAF.df$PRCP))
nrow(KAAF.df)
sum(is.na(KAAF.df$PRCP)) / nrow(KAAF.df) * 100
head(TLH.df)
head(KAAF.df)
names(TLH.df)
TLH.df <- TLH.df %>%
filter(Year >= 2000 & Year <= 2012)
KAAF.df <- KAAF.df %>%
filter(Year >= 2000 & Year <= 2012)
seq(as.Date("2000-01-01"), as.Date("2012-12-31"))
```{r}
as.Date("2012-12-31")
class(as.Date("2012-12-31"))
seq(from = as.Date("2000-01-01"), to= as.Date("2012-12-31"))
?seq.Date
seq(as.Date("2000-01-01"), as.Date("2012-12-31"), "days")
length(seq(as.Date("2000-01-01"), as.Date("2012-12-31"), "days"))
4749-4445
AllDates <- seq(as.Date("2000-01-01"), as.Date("2012-12-31"), "days")
AllDates %in% KAAF.df$Date
sum(!AllDates %in% KAAF.df$Date)
AllDates[!AllDates %in% KAAF.df$Date]
savehistory("~/Desktop/Projects/KBDI/HistoryJan20_2021.Rhistory")
